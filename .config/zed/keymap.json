[
    {
        "bindings": {
            "ctrl-[": ["workspace::SendKeystrokes", "escape"]
        }
    },
    {
        "context": "Workspace",
        "bindings": {
            // telescope
            "ctrl-p": "file_finder::Toggle",
            "ctrl-f": "workspace::NewSearch"
        }
    },
    {
        "context": "Terminal || Editor && (vim_mode == normal) && !VimWaiting && !menu",
        "bindings": {
            "ctrl-h": "workspace::ActivatePaneLeft",
            "ctrl-l": "workspace::ActivatePaneRight",
            "ctrl-k": "workspace::ActivatePaneUp",
            "ctrl-j": "workspace::ActivatePaneDown",

            // workspace
            "ctrl-\\": "workspace::ToggleBottomDock",
            "space e": "workspace::ToggleLeftDock",

            // telescope
            "ctrl-p": "file_finder::Toggle",
            "ctrl-f": "workspace::NewSearch",
            "space f p": "projects::OpenRecent"
        }
    },
    // Empty pane, set of keybindings that are available when there is no active editor
    {
        "context": "EmptyPane || SharedScreen && !AssistantPanel",
        "bindings": {
            // Open file finder
            "ctrl-p": "file_finder::Toggle",
            "ctrl-f": "workspace::NewSearch",
            "space f p": "projects::OpenRecent"
        }
    },
    // {
    //     // cmp like our nvim setting
    //     "context": "Editor && edit_prediction && !showing_completions",
    //     "bindings": {
    //         "tab": "editor::AcceptEditPrediction"
    //     }
    // },
    {
        "context": "Editor && mode == full && edit_prediction",
        "bindings": {
            "tab": "editor::AcceptEditPrediction",
            "alt-shift-tab": "editor::PreviousEditPrediction",
            "ctrl-cmd-right": "editor::AcceptPartialEditPrediction"
        }
    },
    {
        "context": "Editor || Terminal && vim_mode == normal && !VimWaiting && !menu",
        "bindings": {
            "cmd-l": "workspace::ToggleRightDock",
            "cmd-i": "assistant::ToggleFocus",
            "cmd-k": "assistant::InlineAssist"
        }
    },
    {
        "context": "Editor && vim_mode == visual && !VimWaiting && !menu",
        "bindings": {
            "cmd-l": "assistant::QuoteSelection",
            "cmd-i": "assistant::QuoteSelection",
            "cmd-k": "assistant::InlineAssist"
        }
    },
    {
        "context": "Editor && (vim_mode == normal) && !VimWaiting && !menu",
        "bindings": {
            // workspace
            "space o": "tab_switcher::Toggle",

            // Toggle inlay hints
            "space t i": "editor::ToggleInlayHints",

            // Open markdown preview
            "space m p": "markdown::OpenPreview",
            "space m P": "markdown::OpenPreviewToTheSide",

            // Assistant
            "space a k": "assistant::InlineAssist"
            // "space a a": "assistant::QuoteSelection"
        }
    },
    {
        // File explorer compatibility
        "context": "ProjectPanel && not_editing",
        "bindings": {
            "ctrl-h": "workspace::ActivatePaneLeft",
            "ctrl-l": "workspace::ActivatePaneRight",
            "ctrl-k": "workspace::ActivatePaneUp",
            "ctrl-j": "workspace::ActivatePaneDown",

            "space e": "workspace::ToggleLeftDock",
            "a": "project_panel::NewFile",
            "A": "project_panel::NewDirectory",
            "escape": null,
            "l": "project_panel::ExpandSelectedEntry",
            "z": "project_panel::CollapseSelectedEntry",
            "Z": "project_panel::CollapseAllEntries",
            "o": "project_panel::OpenPermanent",
            "d": "project_panel::Delete",
            "r": "project_panel::Rename",
            "P": "project_panel::SelectParent",
            "c": "project_panel::Copy",
            "p": "project_panel::Paste"
        }
    },
    // Sneak motion
    {
        "context": "vim_mode == normal || vim_mode == visual",
        "bindings": {
            "s": ["vim::PushSneak", {}],
            "S": ["vim::PushSneakBackward", {}]
        }
    },
    // AI
    {
        "context": "AgentPanel",
        "bindings": {
            // movement
            "cmd-i": "workspace::ToggleRightDock"

            // "space a c": "search::SelectNextMatch",
            // "space a shift-c": "search::SelectPreviousMatch",
            // "space a m": "assistant::ToggleModelSelector",
            // "space a h": "assistant::DeployHistory",
            // "space a l": "assistant::OpenPromptLibrary"
        }
    },
    {
        "context": "Editor && VimControl && !VimWaiting && !menu",
        "bindings": {
            // general

            // jumping
            "ctrl-shift-u": "vim::ScrollUp",
            "ctrl-u": ["workspace::SendKeystrokes", "ctrl-shift-u z z"],
            "ctrl-shift-d": "vim::ScrollDown",
            "ctrl-d": ["workspace::SendKeystrokes", "ctrl-shift-d z z"],
            // "n": ["workspace::SendKeystrokes", "cmd- z z"],
            // "shift-n": ["workspace::SendKeystrokes", "g shift-n z z"],

            // window
            "ctrl-w W": ["workspace::SendKeystrokes", "cmd-w"],
            "ctrl-w \"": "pane::SplitVertical",
            "ctrl-w %": "pane::SplitHorizontal",
            "space x": ["workspace::SendKeystrokes", "cmd-w"],

            // tab
            "ctrl-t p": "pane::TogglePinTab",
            "ctrl-t P": "pane::CloseItemsToTheRight",

            // lsp with all defaults from zed
            "g i": "editor::GoToImplementation",
            "g r": "editor::FindAllReferences",
            "shift-s": "editor::ShowSignatureHelp",
            "shift-k": "editor::Hover",
            "shift-l": "editor::Hover",
            "] e": "editor::GoToDiagnostic",
            "[ e": "editor::GoToPreviousDiagnostic",
            "space l a": "editor::ToggleCodeActions",
            "space c a": "editor::ToggleCodeActions",
            "space l f": "editor::Format",
            "space l r": "editor::Rename",
            "space r a": "editor::Rename",

            // trouble
            "space l s": "outline::Toggle",
            "space l S": "project_symbols::Toggle",
            "space l d": "diagnostics::Deploy",

            // git
            "space b": "git::Blame"
        }
    },
    {
        "context": "Editor && VimControl && !menu",
        "bindings": {}
    },
    {
        "context": "Editor && vim_mode == visual && !VimWaiting && !VimObject",
        "bindings": {
            "shift-j": "editor::MoveLineDown",
            "shift-k": "editor::MoveLineUp"
        }
    },
    {
        "context": "vim_mode == insert",
        "bindings": {
            // basic
            "ctrl-k": "editor::CutToEndOfLine",
            "ctrl-d": "editor::Delete",

            // lsp
            "ctrl-s": "editor::ShowSignatureHelp"
        }
    },
    {
        "context": "Editor && vim_mode == insert && (!showing_code_actions && !showing_completions)",
        "bindings": {
            // cmp
            "ctrl-p": "editor::ShowCompletions",
            "ctrl-n": "editor::ShowCompletions"
        }
    },
    {
        "context": "Workspace",
        "bindings": {
            "ctrl-~": "workspace::NewTerminal",
            "ctrl-z": "workspace::ToggleZoom",
            "cmd-k": [
                "projects::OpenRecent",
                {
                    "create_new_window": false
                }
            ],
            "ctrl-x": "tab_switcher::CloseSelectedItem"
        }
    }
]
